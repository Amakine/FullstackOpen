{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","response","data","add","newPerson","post","update","id","put","remove","delete","Filter","filter","handleNewFilter","value","onChange","PersonForm","addPerson","newName","handleNewName","newNumber","handleNewNumber","onSubmit","type","Numbers","persons","removePerson","p","RegExp","test","name","map","number","onClick","Notification","notification","message","isWarning","notificationStyle","color","fontStyle","fontSize","border","backgroundColor","borderRadius","className","style","App","useState","setPersons","setNotification","useEffect","console","log","setNewName","setNewNumber","setFilter","showNotification","setTimeout","event","target","preventDefault","length","alert","duplicate","find","window","confirm","returnedPerson","person","concat","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.173399d6.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n        .then(response => response.data)\n}\n\nconst add = (newPerson) => {\n    return axios.post(baseUrl, newPerson)\n        .then(response => response.data)\n}\n\nconst update = (id, newPerson) => {\n    return axios.put(`${baseUrl}/${id}`, newPerson)\n        .then(response => response.data)\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst personService = { getAll, add, update, remove }\nexport default personService\n","import React, { useEffect, useState } from 'react'\r\nimport personService from './services/persons'\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([])\r\n  const [ notification, setNotification] = useState({})\r\n\r\n  const hook = () => {\r\n    personService\r\n      .getAll()\r\n      .then((persons) => {\r\n        console.log('promise fulfilled')\r\n        setPersons(persons)\r\n      })\r\n  }\r\n  useEffect(hook, [])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filter, setFilter ] = useState('')\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    console.log(event)\r\n\r\n    if (newName.length <= 0) {\r\n      alert('\"Name\" field is required!')\r\n      return;\r\n    }\r\n\r\n    if (newNumber.length <= 0) {\r\n      alert('\"Number\" field is required!')\r\n      return;\r\n    }\r\n\r\n    if (!/^[0-9+-]*$/.test(newNumber)) {\r\n      alert('Invalid phone number!')\r\n      return;\r\n    }\r\n\r\n\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n\r\n    const duplicate = persons.find(p => p.name === newPerson.name)\r\n    \r\n    if (duplicate) {\r\n      if (!window.confirm(`${newPerson.name} already exists, replace the old number with a new one?`)) return;\r\n\r\n      personService\r\n        .update(duplicate.id, newPerson)\r\n        .then(returnedPerson => {\r\n          showNotification(`Number of ${returnedPerson.name} updated!`)\r\n\r\n          setPersons(\r\n            persons.map(person => (person.id !== returnedPerson.id)\r\n              ? person : returnedPerson\r\n            )\r\n          )\r\n        })\r\n    }\r\n    else {\r\n      personService\r\n        .add(newPerson)\r\n        .then(returnedPerson => {\r\n          showNotification(`${returnedPerson.name} added to phonebook!`)\r\n          setPersons(persons.concat(returnedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n    }\r\n  }\r\n\r\n  const removePerson = (person) => {\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n      personService\r\n        .remove(person.id)\r\n        .then(() => {\r\n          setPersons(\r\n            persons.filter(p => p.id !== person.id)\r\n          )\r\n          showNotification(`${person.name} removed from phonebook!`)\r\n        })\r\n        .catch(error => {\r\n          showNotification(`Information of ${person.name} has already been removed from the server`, true)\r\n        })\r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n  const handleNewFilter = (event) => {\r\n    const filter = event.target.value\r\n    setFilter(filter)\r\n  }\r\n\r\n  const handleNewName = (event) => {\r\n    const name = event.target.value\r\n    setNewName(name)\r\n  }\r\n  const handleNewNumber = (event) => {\r\n    const number = event.target.value\r\n    setNewNumber(number)\r\n  }\r\n\r\n  const showNotification = (message, isWarning=false) => {\r\n    setNotification({message, isWarning})\r\n\r\n    setTimeout(() => {\r\n      setNotification(null)\r\n    }, 5000)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Notification notification={notification}/>\r\n\r\n      <h2>Phonebook</h2>\r\n\r\n      <Filter\r\n        filter={filter}\r\n        handleNewFilter={handleNewFilter}\r\n      />\r\n\r\n      <h3>Add a new</h3>\r\n      <PersonForm\r\n        addPerson={addPerson}\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        handleNewName={handleNewName}\r\n        handleNewNumber={handleNewNumber}\r\n      />\r\n\r\n      <h3>Numbers</h3>\r\n      <Numbers\r\n        persons={persons}\r\n        filter={filter}\r\n        removePerson={removePerson}\r\n      />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nconst Filter = ({filter, handleNewFilter}) => (\r\n  <div>\r\n    filter shown with <input\r\n      value={filter}\r\n      onChange={handleNewFilter}\r\n    />\r\n  </div>\r\n)\r\n\r\nconst PersonForm = ({addPerson, newName, handleNewName, newNumber, handleNewNumber}) => (\r\n  \r\n  <form onSubmit={addPerson}>\r\n    <div>name: <input\r\n          value={newName}\r\n          onChange={handleNewName}\r\n        />\r\n    </div>\r\n    <div>\r\n        number: <input\r\n          value={newNumber}\r\n          onChange={handleNewNumber}\r\n        />\r\n    </div>\r\n    <div>\r\n        <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n)\r\n\r\nconst Numbers = ({persons, filter, removePerson}) => (\r\n  <div>\r\n    <ul>\r\n      {persons\r\n        .filter(p => {\r\n          const regexp = new RegExp('^'+filter, 'i')\r\n          return (regexp.test(p.name))\r\n        })\r\n        .map(\r\n          p => <li key={p.name}>{p.name} {p.number}<button onClick={() => removePerson(p)}>Delete</button></li>\r\n        )\r\n      }\r\n    </ul>\r\n  </div>\r\n)\r\nconst Notification = ({notification}) => {\r\n  if (!notification) return null\r\n  if (!notification.message) return null\r\n\r\n  const {message, isWarning=false} = notification\r\n\r\n  const successStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 20,\r\n    border: '2px solid green',\r\n    backgroundColor: 'lightgray',\r\n    borderRadius: '4px'\r\n  }\r\n\r\n  const warningStyle = {\r\n    color: 'red',\r\n    fontStyle: 'bold',\r\n    fontSize: 20,\r\n    border: '2px solid red',\r\n    backgroundColor: 'lightgray',\r\n    borderRadius: '4px'\r\n  }\r\n\r\n  const notificationStyle = (isWarning)\r\n    ? warningStyle\r\n    : successStyle\r\n\r\n\r\n  return (\r\n    <div className=\"error\" style={notificationStyle} >\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}